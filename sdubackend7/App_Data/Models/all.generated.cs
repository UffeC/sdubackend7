using  System;
using  System.Collections.Generic;
using  System.Linq.Expressions;
using  System.Web;
using  Umbraco.Core.Models;
using  Umbraco.Core.Models.PublishedContent;
using  Umbraco.Web;
using  Umbraco.ModelsBuilder;
using  Umbraco.ModelsBuilder.Umbraco;
[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "ac6bdfb13c64ab86")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.1")]


// FILE: models.generated.cs

//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------















namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Guide</summary>
	[PublishedContentModel("guide")]
	public partial class Guide : PublishedContentModel, IBaseSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "guide";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Guide(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Guide, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return Umbraco.Web.PublishedContentModels.BaseSection.GetTitle(this); }
		}
	}

	/// <summary>Home</summary>
	[PublishedContentModel("home")]
	public partial class Home : PublishedContentModel, IBaseSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "home";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Home(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Home, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return Umbraco.Web.PublishedContentModels.BaseSection.GetTitle(this); }
		}
	}

	// Mixin content Type 1064 with alias "baseSection"
	/// <summary>Base section</summary>
	public partial interface IBaseSection : IPublishedContent
	{
		/// <summary>Title</summary>
		string Title { get; }
	}

	/// <summary>Base section</summary>
	[PublishedContentModel("baseSection")]
	public partial class BaseSection : PublishedContentModel, IBaseSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "baseSection";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BaseSection(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BaseSection, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return GetTitle(this); }
		}

		/// <summary>Static getter for Title</summary>
		public static string GetTitle(IBaseSection that) { return that.GetPropertyValue<string>("title"); }
	}

	/// <summary>Content box page</summary>
	[PublishedContentModel("contentBoxPage")]
	public partial class ContentBoxPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contentBoxPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ContentBoxPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ContentBoxPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("heading")]
		public string Heading
		{
			get { return this.GetPropertyValue<string>("heading"); }
		}
	}

	/// <summary>Simple box</summary>
	[PublishedContentModel("simpleBox")]
	public partial class SimpleBox : PublishedContentModel, IBaseContentBox
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "simpleBox";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SimpleBox(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SimpleBox, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Body
		///</summary>
		[ImplementPropertyType("body")]
		public IHtmlString Body
		{
			get { return this.GetPropertyValue<IHtmlString>("body"); }
		}

		///<summary>
		/// Is important: Attaches the simple box to the top of the page.
		///</summary>
		[ImplementPropertyType("isImportant")]
		public bool IsImportant
		{
			get { return this.GetPropertyValue<bool>("isImportant"); }
		}

		///<summary>
		/// Subheading
		///</summary>
		[ImplementPropertyType("subheading")]
		public string Subheading
		{
			get { return Umbraco.Web.PublishedContentModels.BaseContentBox.GetSubheading(this); }
		}
	}

	/// <summary>Login</summary>
	[PublishedContentModel("login")]
	public partial class Login : PublishedContentModel, IBaseSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "login";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Login(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Login, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Application name
		///</summary>
		[ImplementPropertyType("applicationName")]
		public string ApplicationName
		{
			get { return this.GetPropertyValue<string>("applicationName"); }
		}

		///<summary>
		/// Code placeholder
		///</summary>
		[ImplementPropertyType("codePlaceholder")]
		public string CodePlaceholder
		{
			get { return this.GetPropertyValue<string>("codePlaceholder"); }
		}

		///<summary>
		/// Instructions
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}

		///<summary>
		/// Login button text
		///</summary>
		[ImplementPropertyType("loginButtonText")]
		public string LoginButtonText
		{
			get { return this.GetPropertyValue<string>("loginButtonText"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return Umbraco.Web.PublishedContentModels.BaseSection.GetTitle(this); }
		}
	}

	/// <summary>Exercise</summary>
	[PublishedContentModel("exercise")]
	public partial class Exercise : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "exercise";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Exercise(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Exercise, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Body
		///</summary>
		[ImplementPropertyType("body")]
		public IHtmlString Body
		{
			get { return this.GetPropertyValue<IHtmlString>("body"); }
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("heading")]
		public string Heading
		{
			get { return this.GetPropertyValue<string>("heading"); }
		}

		///<summary>
		/// Intro
		///</summary>
		[ImplementPropertyType("intro")]
		public string Intro
		{
			get { return this.GetPropertyValue<string>("intro"); }
		}

		///<summary>
		/// Number
		///</summary>
		[ImplementPropertyType("number")]
		public decimal Number
		{
			get { return this.GetPropertyValue<decimal>("number"); }
		}
	}

	/// <summary>Exercises</summary>
	[PublishedContentModel("exercises")]
	public partial class Exercises : PublishedContentModel, IBasePage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "exercises";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Exercises(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Exercises, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("heading")]
		public string Heading
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetHeading(this); }
		}
	}

	// Mixin content Type 1091 with alias "basePage"
	/// <summary>Base page</summary>
	public partial interface IBasePage : IPublishedContent
	{
		/// <summary>Heading</summary>
		string Heading { get; }
	}

	/// <summary>Base page</summary>
	[PublishedContentModel("basePage")]
	public partial class BasePage : PublishedContentModel, IBasePage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "basePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BasePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BasePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("heading")]
		public string Heading
		{
			get { return GetHeading(this); }
		}

		/// <summary>Static getter for Heading</summary>
		public static string GetHeading(IBasePage that) { return that.GetPropertyValue<string>("heading"); }
	}

	// Mixin content Type 1098 with alias "baseContentBox"
	/// <summary>Base content box</summary>
	public partial interface IBaseContentBox : IPublishedContent
	{
		/// <summary>Subheading</summary>
		string Subheading { get; }
	}

	/// <summary>Base content box</summary>
	[PublishedContentModel("baseContentBox")]
	public partial class BaseContentBox : PublishedContentModel, IBaseContentBox
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "baseContentBox";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BaseContentBox(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BaseContentBox, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Subheading
		///</summary>
		[ImplementPropertyType("subheading")]
		public string Subheading
		{
			get { return GetSubheading(this); }
		}

		/// <summary>Static getter for Subheading</summary>
		public static string GetSubheading(IBaseContentBox that) { return that.GetPropertyValue<string>("subheading"); }
	}

	/// <summary>Guide Intro</summary>
	[PublishedContentModel("guideIntro")]
	public partial class GuideIntro : PublishedContentModel, IBaseSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "guideIntro";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public GuideIntro(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<GuideIntro, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Next Button Text
		///</summary>
		[ImplementPropertyType("nextButtonText")]
		public string NextButtonText
		{
			get { return this.GetPropertyValue<string>("nextButtonText"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return Umbraco.Web.PublishedContentModels.BaseSection.GetTitle(this); }
		}
	}

	/// <summary>Training Overview</summary>
	[PublishedContentModel("trainingOverview")]
	public partial class TrainingOverview : PublishedContentModel, IBaseSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "trainingOverview";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public TrainingOverview(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<TrainingOverview, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return Umbraco.Web.PublishedContentModels.BaseSection.GetTitle(this); }
		}
	}

	/// <summary>Training Survey</summary>
	[PublishedContentModel("trainingSurvey")]
	public partial class TrainingSurvey : PublishedContentModel, IBaseSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "trainingSurvey";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public TrainingSurvey(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<TrainingSurvey, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return Umbraco.Web.PublishedContentModels.BaseSection.GetTitle(this); }
		}
	}

	/// <summary>Training Diary</summary>
	[PublishedContentModel("trainingDiary")]
	public partial class TrainingDiary : PublishedContentModel, IBaseSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "trainingDiary";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public TrainingDiary(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<TrainingDiary, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return Umbraco.Web.PublishedContentModels.BaseSection.GetTitle(this); }
		}
	}

	/// <summary>Repetition maximum</summary>
	[PublishedContentModel("repetitionMaximum")]
	public partial class RepetitionMaximum : PublishedContentModel, IBasePage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "repetitionMaximum";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public RepetitionMaximum(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<RepetitionMaximum, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("heading")]
		public string Heading
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetHeading(this); }
		}
	}

	/// <summary>Group A Survey</summary>
	[PublishedContentModel("groupASurvey")]
	public partial class GroupAsurvey : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "groupASurvey";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public GroupAsurvey(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<GroupAsurvey, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Date
		///</summary>
		[ImplementPropertyType("date")]
		public DateTime Date
		{
			get { return this.GetPropertyValue<DateTime>("date"); }
		}

		///<summary>
		/// Days on Medication
		///</summary>
		[ImplementPropertyType("daysOnMedication")]
		public decimal DaysOnMedication
		{
			get { return this.GetPropertyValue<decimal>("daysOnMedication"); }
		}

		///<summary>
		/// Days Sick
		///</summary>
		[ImplementPropertyType("daysSick")]
		public decimal DaysSick
		{
			get { return this.GetPropertyValue<decimal>("daysSick"); }
		}

		///<summary>
		/// Ipren/Ibumetin 200mg
		///</summary>
		[ImplementPropertyType("ipren200")]
		public int Ipren200
		{
			get { return this.GetPropertyValue<int>("ipren200"); }
		}

		///<summary>
		/// Ipren/Ibumetin 600mg
		///</summary>
		[ImplementPropertyType("ipren600")]
		public int Ipren600
		{
			get { return this.GetPropertyValue<int>("ipren600"); }
		}

		///<summary>
		/// Other Medication Amount
		///</summary>
		[ImplementPropertyType("otherMedicationAmount")]
		public string OtherMedicationAmount
		{
			get { return this.GetPropertyValue<string>("otherMedicationAmount"); }
		}

		///<summary>
		/// Other Medication Type
		///</summary>
		[ImplementPropertyType("otherMedicationType")]
		public string OtherMedicationType
		{
			get { return this.GetPropertyValue<string>("otherMedicationType"); }
		}

		///<summary>
		/// Other Treatment
		///</summary>
		[ImplementPropertyType("otherTreatment")]
		public string OtherTreatment
		{
			get { return this.GetPropertyValue<string>("otherTreatment"); }
		}

		///<summary>
		/// Pain Average
		///</summary>
		[ImplementPropertyType("painAverage")]
		public decimal PainAverage
		{
			get { return this.GetPropertyValue<decimal>("painAverage"); }
		}

		///<summary>
		/// Pain High
		///</summary>
		[ImplementPropertyType("painHigh")]
		public decimal PainHigh
		{
			get { return this.GetPropertyValue<decimal>("painHigh"); }
		}

		///<summary>
		/// Pain Low
		///</summary>
		[ImplementPropertyType("painLow")]
		public decimal PainLow
		{
			get { return this.GetPropertyValue<decimal>("painLow"); }
		}

		///<summary>
		/// Pamol/Panodil 500mg
		///</summary>
		[ImplementPropertyType("pamol500")]
		public int Pamol500
		{
			get { return this.GetPropertyValue<int>("pamol500"); }
		}

		///<summary>
		/// Treatment Acupuncture
		///</summary>
		[ImplementPropertyType("treatmentAcupuncture")]
		public bool TreatmentAcupuncture
		{
			get { return this.GetPropertyValue<bool>("treatmentAcupuncture"); }
		}

		///<summary>
		/// Treatment Chiropractor
		///</summary>
		[ImplementPropertyType("treatmentChiropractor")]
		public bool TreatmentChiropractor
		{
			get { return this.GetPropertyValue<bool>("treatmentChiropractor"); }
		}

		///<summary>
		/// Treatment Doctor
		///</summary>
		[ImplementPropertyType("treatmentDoctor")]
		public bool TreatmentDoctor
		{
			get { return this.GetPropertyValue<bool>("treatmentDoctor"); }
		}

		///<summary>
		/// Treatment Massage
		///</summary>
		[ImplementPropertyType("treatmentMassage")]
		public bool TreatmentMassage
		{
			get { return this.GetPropertyValue<bool>("treatmentMassage"); }
		}

		///<summary>
		/// Treatment Physiotherapy
		///</summary>
		[ImplementPropertyType("treatmentPhysiotherapy")]
		public bool TreatmentPhysiotherapy
		{
			get { return this.GetPropertyValue<bool>("treatmentPhysiotherapy"); }
		}

		///<summary>
		/// User
		///</summary>
		[ImplementPropertyType("user")]
		public IPublishedContent User
		{
			get { return this.GetPropertyValue<IPublishedContent>("user"); }
		}
	}

	/// <summary>Group B Survey</summary>
	[PublishedContentModel("groupBSurvey")]
	public partial class GroupBsurvey : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "groupBSurvey";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public GroupBsurvey(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<GroupBsurvey, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Days on Medication
		///</summary>
		[ImplementPropertyType("daysOnMedication")]
		public decimal DaysOnMedication
		{
			get { return this.GetPropertyValue<decimal>("daysOnMedication"); }
		}

		///<summary>
		/// Days Sick
		///</summary>
		[ImplementPropertyType("daysSick")]
		public decimal DaysSick
		{
			get { return this.GetPropertyValue<decimal>("daysSick"); }
		}

		///<summary>
		/// Ipren/Ibumetin 200mg
		///</summary>
		[ImplementPropertyType("ipren200")]
		public int Ipren200
		{
			get { return this.GetPropertyValue<int>("ipren200"); }
		}

		///<summary>
		/// Ipren/Ibumetin 600mg
		///</summary>
		[ImplementPropertyType("ipren600")]
		public int Ipren600
		{
			get { return this.GetPropertyValue<int>("ipren600"); }
		}

		///<summary>
		/// Other Medication Amount
		///</summary>
		[ImplementPropertyType("otherMedicationAmount")]
		public string OtherMedicationAmount
		{
			get { return this.GetPropertyValue<string>("otherMedicationAmount"); }
		}

		///<summary>
		/// Other Medication Type
		///</summary>
		[ImplementPropertyType("otherMedicationType")]
		public string OtherMedicationType
		{
			get { return this.GetPropertyValue<string>("otherMedicationType"); }
		}

		///<summary>
		/// Other Treatment
		///</summary>
		[ImplementPropertyType("otherTreatment")]
		public string OtherTreatment
		{
			get { return this.GetPropertyValue<string>("otherTreatment"); }
		}

		///<summary>
		/// Pain Average
		///</summary>
		[ImplementPropertyType("painAverage")]
		public decimal PainAverage
		{
			get { return this.GetPropertyValue<decimal>("painAverage"); }
		}

		///<summary>
		/// Pain High
		///</summary>
		[ImplementPropertyType("painHigh")]
		public decimal PainHigh
		{
			get { return this.GetPropertyValue<decimal>("painHigh"); }
		}

		///<summary>
		/// Pain Low
		///</summary>
		[ImplementPropertyType("painLow")]
		public decimal PainLow
		{
			get { return this.GetPropertyValue<decimal>("painLow"); }
		}

		///<summary>
		/// Pamol/Panodil 500mg
		///</summary>
		[ImplementPropertyType("pamol500")]
		public int Pamol500
		{
			get { return this.GetPropertyValue<int>("pamol500"); }
		}

		///<summary>
		/// Treatment Acupuncture
		///</summary>
		[ImplementPropertyType("treatmentAcupuncture")]
		public bool TreatmentAcupuncture
		{
			get { return this.GetPropertyValue<bool>("treatmentAcupuncture"); }
		}

		///<summary>
		/// Treatment Chiropractor
		///</summary>
		[ImplementPropertyType("treatmentChiropractor")]
		public bool TreatmentChiropractor
		{
			get { return this.GetPropertyValue<bool>("treatmentChiropractor"); }
		}

		///<summary>
		/// Treatment Doctor
		///</summary>
		[ImplementPropertyType("treatmentDoctor")]
		public bool TreatmentDoctor
		{
			get { return this.GetPropertyValue<bool>("treatmentDoctor"); }
		}

		///<summary>
		/// Treatment Massage
		///</summary>
		[ImplementPropertyType("treatmentMassage")]
		public bool TreatmentMassage
		{
			get { return this.GetPropertyValue<bool>("treatmentMassage"); }
		}

		///<summary>
		/// Treatment Physiotherapy
		///</summary>
		[ImplementPropertyType("treatmentPhysiotherapy")]
		public bool TreatmentPhysiotherapy
		{
			get { return this.GetPropertyValue<bool>("treatmentPhysiotherapy"); }
		}

		///<summary>
		/// User
		///</summary>
		[ImplementPropertyType("user")]
		public IPublishedContent User
		{
			get { return this.GetPropertyValue<IPublishedContent>("user"); }
		}
	}

	/// <summary>Group A Diary</summary>
	[PublishedContentModel("groupADiary")]
	public partial class GroupAdiary : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "groupADiary";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public GroupAdiary(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<GroupAdiary, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("comments")]
		public string Comments
		{
			get { return this.GetPropertyValue<string>("comments"); }
		}

		///<summary>
		/// Date Filled
		///</summary>
		[ImplementPropertyType("dateFilled")]
		public DateTime DateFilled
		{
			get { return this.GetPropertyValue<DateTime>("dateFilled"); }
		}

		///<summary>
		/// Is Supervised
		///</summary>
		[ImplementPropertyType("isSupervised")]
		public bool IsSupervised
		{
			get { return this.GetPropertyValue<bool>("isSupervised"); }
		}

		///<summary>
		/// Medication Amount After
		///</summary>
		[ImplementPropertyType("medicationAmountAfter")]
		public string MedicationAmountAfter
		{
			get { return this.GetPropertyValue<string>("medicationAmountAfter"); }
		}

		///<summary>
		/// Medication Amount Before
		///</summary>
		[ImplementPropertyType("medicationAmountBefore")]
		public string MedicationAmountBefore
		{
			get { return this.GetPropertyValue<string>("medicationAmountBefore"); }
		}

		///<summary>
		/// Medication Type After
		///</summary>
		[ImplementPropertyType("medicationTypeAfter")]
		public string MedicationTypeAfter
		{
			get { return this.GetPropertyValue<string>("medicationTypeAfter"); }
		}

		///<summary>
		/// Medication Type Before
		///</summary>
		[ImplementPropertyType("medicationTypeBefore")]
		public string MedicationTypeBefore
		{
			get { return this.GetPropertyValue<string>("medicationTypeBefore"); }
		}

		///<summary>
		/// Pain After
		///</summary>
		[ImplementPropertyType("painAfter")]
		public decimal PainAfter
		{
			get { return this.GetPropertyValue<decimal>("painAfter"); }
		}

		///<summary>
		/// Pain Before
		///</summary>
		[ImplementPropertyType("painBefore")]
		public decimal PainBefore
		{
			get { return this.GetPropertyValue<decimal>("painBefore"); }
		}

		///<summary>
		/// Side Effects
		///</summary>
		[ImplementPropertyType("sideEffects")]
		public string SideEffects
		{
			get { return this.GetPropertyValue<string>("sideEffects"); }
		}

		///<summary>
		/// User
		///</summary>
		[ImplementPropertyType("user")]
		public IPublishedContent User
		{
			get { return this.GetPropertyValue<IPublishedContent>("user"); }
		}
	}

	/// <summary>Submissions Directory</summary>
	[PublishedContentModel("submissionsDirectory")]
	public partial class SubmissionsDirectory : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "submissionsDirectory";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SubmissionsDirectory(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SubmissionsDirectory, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>User A</summary>
	[PublishedContentModel("userA")]
	public partial class UserA : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "userA";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UserA(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UserA, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// AutheticationCode
		///</summary>
		[ImplementPropertyType("autheticationCode")]
		public string AutheticationCode
		{
			get { return this.GetPropertyValue<string>("autheticationCode"); }
		}
	}

	/// <summary>User B</summary>
	[PublishedContentModel("userB")]
	public partial class UserB : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "userB";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UserB(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UserB, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// AutheticationCode
		///</summary>
		[ImplementPropertyType("autheticationCode")]
		public string AutheticationCode
		{
			get { return this.GetPropertyValue<string>("autheticationCode"); }
		}
	}

	/// <summary>Users Directory</summary>
	[PublishedContentModel("usersDirectory")]
	public partial class UsersDirectory : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "usersDirectory";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsersDirectory(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsersDirectory, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Group B Diary</summary>
	[PublishedContentModel("groupBDiary")]
	public partial class GroupBdiary : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "groupBDiary";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public GroupBdiary(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<GroupBdiary, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("comments")]
		public string Comments
		{
			get { return this.GetPropertyValue<string>("comments"); }
		}

		///<summary>
		/// Date Filled
		///</summary>
		[ImplementPropertyType("dateFilled")]
		public DateTime DateFilled
		{
			get { return this.GetPropertyValue<DateTime>("dateFilled"); }
		}

		///<summary>
		/// Is Supervised
		///</summary>
		[ImplementPropertyType("isSupervised")]
		public bool IsSupervised
		{
			get { return this.GetPropertyValue<bool>("isSupervised"); }
		}

		///<summary>
		/// Medication Amount After
		///</summary>
		[ImplementPropertyType("medicationAmountAfter")]
		public string MedicationAmountAfter
		{
			get { return this.GetPropertyValue<string>("medicationAmountAfter"); }
		}

		///<summary>
		/// Medication Amount Before
		///</summary>
		[ImplementPropertyType("medicationAmountBefore")]
		public string MedicationAmountBefore
		{
			get { return this.GetPropertyValue<string>("medicationAmountBefore"); }
		}

		///<summary>
		/// Medication Type After
		///</summary>
		[ImplementPropertyType("medicationTypeAfter")]
		public string MedicationTypeAfter
		{
			get { return this.GetPropertyValue<string>("medicationTypeAfter"); }
		}

		///<summary>
		/// Medication Type Before
		///</summary>
		[ImplementPropertyType("medicationTypeBefore")]
		public string MedicationTypeBefore
		{
			get { return this.GetPropertyValue<string>("medicationTypeBefore"); }
		}

		///<summary>
		/// Pain After
		///</summary>
		[ImplementPropertyType("painAfter")]
		public decimal PainAfter
		{
			get { return this.GetPropertyValue<decimal>("painAfter"); }
		}

		///<summary>
		/// Pain Before
		///</summary>
		[ImplementPropertyType("painBefore")]
		public decimal PainBefore
		{
			get { return this.GetPropertyValue<decimal>("painBefore"); }
		}

		///<summary>
		/// Side Effects
		///</summary>
		[ImplementPropertyType("sideEffects")]
		public string SideEffects
		{
			get { return this.GetPropertyValue<string>("sideEffects"); }
		}

		///<summary>
		/// User
		///</summary>
		[ImplementPropertyType("user")]
		public IPublishedContent User
		{
			get { return this.GetPropertyValue<IPublishedContent>("user"); }
		}
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public string UmbracoFile
		{
			get { return this.GetPropertyValue<string>("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}



// EOF
